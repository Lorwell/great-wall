name: CI Build and Deploy

on: workflow_dispatch

#on:
#  push:
#    branches: [ develop ]
#  pull_request:
#    branches: [ develop ]

env:
  IMAGE_REGISTRY: docker.io
  GITHUB_CI: -DGITHUB_CI=true

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        target: [ great-wall-bootJar, great-wall, great-wall-g1gc ]
        platform: [ linux/amd64 ]
    #        arm64 构建特别的慢，github actions 超时也没有完成顾这里注释
    #        platform: [ linux/amd64, linux/arm64 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from build.gradle.kts
        run: |
          export VERSION=$(grep -Eo 'version\s*=\s*"[^"]+"' ./great-wall-server/build.gradle.kts | cut -d'"' -f2)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Extracted version: ${VERSION}"

      - name: Format platform
        run: |
          export PLATFORM=$(echo "${{ matrix.platform }}" | tr '/' '-')
          echo "PLATFORM=${PLATFORM}" >> $GITHUB_ENV
          echo "Extracted paltform: ${PLATFORM}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/bake-action@v6
        env:
          IMAGE_TAG: ${{ env.VERSION }}
          TAG_PLATFORM: -${{ env.PLATFORM }}
        with:
          files: docker-bake.hcl
          push: true
          targets: ${{ matrix.target }}
          set: |
            *.platform=${{ matrix.platform }}

  merge-manifest:
    needs: build
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        target: [ _bootJar, _g1gc, "" ]
    steps:
      - name: Get version from build.gradle.kts
        run: |
          export VERSION=$(grep -Eo 'version\s*=\s*"[^"]+"' ./great-wall-server/build.gradle.kts | cut -d'"' -f2)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Extracted version: ${VERSION}"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Create and Push Multi-Arch Manifest
        run: |
               docker manifest create \
               ${{ env.IMAGE_REGISTRY }}/moailaozi/great-wall:${{ env.VERSION }}${{ matrix.target }} \
               ${{ env.IMAGE_REGISTRY }}/moailaozi/great-wall:${{ env.VERSION }}${{ matrix.target }}-linux-amd64
#            ${{ env.IMAGE_REGISTRY }}/moailaozi/great-wall:${{ env.VERSION }}${{ matrix.target }}-linux-amd64 \
#            ${{ env.IMAGE_REGISTRY }}/moailaozi/great-wall:${{ env.VERSION }}${{ matrix.target }}-linux-arm64
               
               docker manifest push \
               ${{ env.IMAGE_REGISTRY }}/moailaozi/great-wall:${{ env.VERSION }}${{ matrix.target }}