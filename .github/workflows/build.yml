name: CI Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl git unzip zip

      - name: Install NVM and Node.js
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV
          echo "$NVM_DIR/nvm.sh" >> $GITHUB_ENV
          nvm install 22  # 安装 Node.js 22
          nvm use 22
          node --version

      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate
          pnpm --version

      - name: Install SDKMAN! and JDK
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install java 21-graalce  # 使用 GraalVM JDK 21
          sdk use java 21-graalce
          java --version

      - name: Extract version from build.gradle.kts
        id: version
        run: |
          echo "version=$(grep -Eo 'version\s*=\s*"[^"]+"' ./great-wall-server/build.gradle.kts | cut -d'"' -f2)" >> $GITHUB_ENV
          echo "IMAGE_TAG=$version" >> $GITHUB_ENV

      - name: Build frontend
        run: |
          echo "::group::Building frontend"
          source "$NVM_DIR/nvm.sh"
          cd great-wall-fe
          pnpm install
          pnpm run build
          cd ..
          echo "::endgroup::"

      - name: Build backend
        run: |
          echo "::group::Building backend"
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          ./gradlew clean bootJar -x test --no-daemon
          echo "::endgroup::"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          echo "::group::Building Docker images"
          docker buildx bake -f docker-bake.hcl great-wall-bootJar --push
          docker buildx bake -f docker-bake.hcl great-wall --push
          docker buildx bake -f docker-bake.hcl great-wall-g1gc --push
          echo "::endgroup::"

      - name: Success message
        run: echo "::notice::========== 全部构建成功 =========="