name: CI Build and Deploy

on: workflow_dispatch

#on:
#  push:
#    branches: [ develop ]
#  pull_request:
#    branches: [ develop ]

env:
  GITHUB_CI: -DGITHUB_CI=true

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        target: [ great-wall-bootJar, great-wall, great-wall-g1gc ]
        platform: [ linux/amd64, linux/arm64 ]
        include:
          - platform: linux/amd64
            cache_key: amd64
          - platform: linux/arm64
            cache_key: arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from build.gradle.kts
        run: |
          export VERSION=$(grep -Eo 'version\s*=\s*"[^"]+"' ./great-wall-server/build.gradle.kts | cut -d'"' -f2)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Extracted version: ${VERSION}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      #          buildkitd-flags: --debug

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Restore target-specific cache
        uses: actions/cache@v3
        with:
          path: ./.buildx-cache/${{ matrix.target }}-${{ matrix.cache_key }}
          key: ${{ runner.os }}-buildx-${{ matrix.target }}-${{ matrix.cache_key }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.target }}-${{ matrix.cache_key }}-

      - name: Build and push Docker images
        uses: docker/bake-action@v4
        env:
          IMAGE_TAG: ${{ env.VERSION }}
        with:
          files: docker-bake.hcl
          push: true
          targets: ${{ matrix.target }}
          platforms: ${{ matrix.platform }}
          set: |
            *.cache-from=type=local,src=./.buildx-cache/${{ matrix.target }}-${{ matrix.cache_key }}
            *.cache-to=type=local,dest=./.buildx-cache/${{ matrix.target }}-${{ matrix.cache_key }}-new,mode=max

      - name: Update cache
        run: |
          rm -rf ./.buildx-cache/${{ matrix.target }}-${{ matrix.cache_key }}
          mv ./.buildx-cache/${{ matrix.target }}-${{ matrix.cache_key }}-new ./.buildx-cache/${{ matrix.target }}

      - name: Success message
        run: echo "::notice::========== 全部构建成功 =========="